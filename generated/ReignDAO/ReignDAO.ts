// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AbrogationProposalExecuted extends ethereum.Event {
  get params(): AbrogationProposalExecuted__Params {
    return new AbrogationProposalExecuted__Params(this);
  }
}

export class AbrogationProposalExecuted__Params {
  _event: AbrogationProposalExecuted;

  constructor(event: AbrogationProposalExecuted) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AbrogationProposalStarted extends ethereum.Event {
  get params(): AbrogationProposalStarted__Params {
    return new AbrogationProposalStarted__Params(this);
  }
}

export class AbrogationProposalStarted__Params {
  _event: AbrogationProposalStarted;

  constructor(event: AbrogationProposalStarted) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AbrogationProposalVote extends ethereum.Event {
  get params(): AbrogationProposalVote__Params {
    return new AbrogationProposalVote__Params(this);
  }
}

export class AbrogationProposalVote__Params {
  _event: AbrogationProposalVote;

  constructor(event: AbrogationProposalVote) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get support(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get power(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class AbrogationProposalVoteCancelled extends ethereum.Event {
  get params(): AbrogationProposalVoteCancelled__Params {
    return new AbrogationProposalVoteCancelled__Params(this);
  }
}

export class AbrogationProposalVoteCancelled__Params {
  _event: AbrogationProposalVoteCancelled;

  constructor(event: AbrogationProposalVoteCancelled) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProposalCanceled extends ethereum.Event {
  get params(): ProposalCanceled__Params {
    return new ProposalCanceled__Params(this);
  }
}

export class ProposalCanceled__Params {
  _event: ProposalCanceled;

  constructor(event: ProposalCanceled) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProposalCreated extends ethereum.Event {
  get params(): ProposalCreated__Params {
    return new ProposalCreated__Params(this);
  }
}

export class ProposalCreated__Params {
  _event: ProposalCreated;

  constructor(event: ProposalCreated) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ProposalExecuted extends ethereum.Event {
  get params(): ProposalExecuted__Params {
    return new ProposalExecuted__Params(this);
  }
}

export class ProposalExecuted__Params {
  _event: ProposalExecuted;

  constructor(event: ProposalExecuted) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProposalQueued extends ethereum.Event {
  get params(): ProposalQueued__Params {
    return new ProposalQueued__Params(this);
  }
}

export class ProposalQueued__Params {
  _event: ProposalQueued;

  constructor(event: ProposalQueued) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get eta(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Vote extends ethereum.Event {
  get params(): Vote__Params {
    return new Vote__Params(this);
  }
}

export class Vote__Params {
  _event: Vote;

  constructor(event: Vote) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get support(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get power(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class VoteCanceled extends ethereum.Event {
  get params(): VoteCanceled__Params {
    return new VoteCanceled__Params(this);
  }
}

export class VoteCanceled__Params {
  _event: VoteCanceled;

  constructor(event: VoteCanceled) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ReignDAO__abrogationProposalsResult {
  value0: Address;
  value1: BigInt;
  value2: string;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: string,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }
}

export class ReignDAO__getAbrogationProposalReceiptResultValue0Struct extends ethereum.Tuple {
  get hasVoted(): boolean {
    return this[0].toBoolean();
  }

  get votes(): BigInt {
    return this[1].toBigInt();
  }

  get support(): boolean {
    return this[2].toBoolean();
  }
}

export class ReignDAO__getActionsResult {
  value0: Array<Address>;
  value1: Array<BigInt>;
  value2: Array<string>;
  value3: Array<Bytes>;

  constructor(
    value0: Array<Address>,
    value1: Array<BigInt>,
    value2: Array<string>,
    value3: Array<Bytes>
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    map.set("value2", ethereum.Value.fromStringArray(this.value2));
    map.set("value3", ethereum.Value.fromBytesArray(this.value3));
    return map;
  }
}

export class ReignDAO__getProposalParametersResultValue0Struct extends ethereum.Tuple {
  get warmUpDuration(): BigInt {
    return this[0].toBigInt();
  }

  get activeDuration(): BigInt {
    return this[1].toBigInt();
  }

  get queueDuration(): BigInt {
    return this[2].toBigInt();
  }

  get gracePeriodDuration(): BigInt {
    return this[3].toBigInt();
  }

  get acceptanceThreshold(): BigInt {
    return this[4].toBigInt();
  }

  get minQuorum(): BigInt {
    return this[5].toBigInt();
  }
}

export class ReignDAO__getReceiptResultValue0Struct extends ethereum.Tuple {
  get hasVoted(): boolean {
    return this[0].toBoolean();
  }

  get votes(): BigInt {
    return this[1].toBigInt();
  }

  get support(): boolean {
    return this[2].toBoolean();
  }
}

export class ReignDAO__proposalsResultParametersStruct extends ethereum.Tuple {
  get warmUpDuration(): BigInt {
    return this[0].toBigInt();
  }

  get activeDuration(): BigInt {
    return this[1].toBigInt();
  }

  get queueDuration(): BigInt {
    return this[2].toBigInt();
  }

  get gracePeriodDuration(): BigInt {
    return this[3].toBigInt();
  }

  get acceptanceThreshold(): BigInt {
    return this[4].toBigInt();
  }

  get minQuorum(): BigInt {
    return this[5].toBigInt();
  }
}

export class ReignDAO__proposalsResult {
  value0: BigInt;
  value1: Address;
  value2: string;
  value3: string;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: boolean;
  value9: boolean;
  value10: ReignDAO__proposalsResultParametersStruct;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: string,
    value3: string,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: boolean,
    value9: boolean,
    value10: ReignDAO__proposalsResultParametersStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromBoolean(this.value8));
    map.set("value9", ethereum.Value.fromBoolean(this.value9));
    map.set("value10", ethereum.Value.fromTuple(this.value10));
    return map;
  }
}

export class ReignDAO extends ethereum.SmartContract {
  static bind(address: Address): ReignDAO {
    return new ReignDAO("ReignDAO", address);
  }

  abrogationProposals(param0: BigInt): ReignDAO__abrogationProposalsResult {
    let result = super.call(
      "abrogationProposals",
      "abrogationProposals(uint256):(address,uint256,string,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new ReignDAO__abrogationProposalsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toString(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_abrogationProposals(
    param0: BigInt
  ): ethereum.CallResult<ReignDAO__abrogationProposalsResult> {
    let result = super.tryCall(
      "abrogationProposals",
      "abrogationProposals(uint256):(address,uint256,string,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ReignDAO__abrogationProposalsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toString(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }

  acceptanceThreshold(): BigInt {
    let result = super.call(
      "acceptanceThreshold",
      "acceptanceThreshold():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_acceptanceThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "acceptanceThreshold",
      "acceptanceThreshold():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  activeDuration(): BigInt {
    let result = super.call("activeDuration", "activeDuration():(uint256)", []);

    return result[0].toBigInt();
  }

  try_activeDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "activeDuration",
      "activeDuration():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAbrogationProposalReceipt(
    proposalId: BigInt,
    voter: Address
  ): ReignDAO__getAbrogationProposalReceiptResultValue0Struct {
    let result = super.call(
      "getAbrogationProposalReceipt",
      "getAbrogationProposalReceipt(uint256,address):((bool,uint256,bool))",
      [
        ethereum.Value.fromUnsignedBigInt(proposalId),
        ethereum.Value.fromAddress(voter)
      ]
    );

    return result[0].toTuple() as ReignDAO__getAbrogationProposalReceiptResultValue0Struct;
  }

  try_getAbrogationProposalReceipt(
    proposalId: BigInt,
    voter: Address
  ): ethereum.CallResult<
    ReignDAO__getAbrogationProposalReceiptResultValue0Struct
  > {
    let result = super.tryCall(
      "getAbrogationProposalReceipt",
      "getAbrogationProposalReceipt(uint256,address):((bool,uint256,bool))",
      [
        ethereum.Value.fromUnsignedBigInt(proposalId),
        ethereum.Value.fromAddress(voter)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as ReignDAO__getAbrogationProposalReceiptResultValue0Struct
    );
  }

  getActions(proposalId: BigInt): ReignDAO__getActionsResult {
    let result = super.call(
      "getActions",
      "getActions(uint256):(address[],uint256[],string[],bytes[])",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );

    return new ReignDAO__getActionsResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray(),
      result[2].toStringArray(),
      result[3].toBytesArray()
    );
  }

  try_getActions(
    proposalId: BigInt
  ): ethereum.CallResult<ReignDAO__getActionsResult> {
    let result = super.tryCall(
      "getActions",
      "getActions(uint256):(address[],uint256[],string[],bytes[])",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ReignDAO__getActionsResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray(),
        value[2].toStringArray(),
        value[3].toBytesArray()
      )
    );
  }

  getProposalParameters(
    proposalId: BigInt
  ): ReignDAO__getProposalParametersResultValue0Struct {
    let result = super.call(
      "getProposalParameters",
      "getProposalParameters(uint256):((uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );

    return result[0].toTuple() as ReignDAO__getProposalParametersResultValue0Struct;
  }

  try_getProposalParameters(
    proposalId: BigInt
  ): ethereum.CallResult<ReignDAO__getProposalParametersResultValue0Struct> {
    let result = super.tryCall(
      "getProposalParameters",
      "getProposalParameters(uint256):((uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as ReignDAO__getProposalParametersResultValue0Struct
    );
  }

  getProposalQuorum(proposalId: BigInt): BigInt {
    let result = super.call(
      "getProposalQuorum",
      "getProposalQuorum(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );

    return result[0].toBigInt();
  }

  try_getProposalQuorum(proposalId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getProposalQuorum",
      "getProposalQuorum(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getReceipt(
    proposalId: BigInt,
    voter: Address
  ): ReignDAO__getReceiptResultValue0Struct {
    let result = super.call(
      "getReceipt",
      "getReceipt(uint256,address):((bool,uint256,bool))",
      [
        ethereum.Value.fromUnsignedBigInt(proposalId),
        ethereum.Value.fromAddress(voter)
      ]
    );

    return result[0].toTuple() as ReignDAO__getReceiptResultValue0Struct;
  }

  try_getReceipt(
    proposalId: BigInt,
    voter: Address
  ): ethereum.CallResult<ReignDAO__getReceiptResultValue0Struct> {
    let result = super.tryCall(
      "getReceipt",
      "getReceipt(uint256,address):((bool,uint256,bool))",
      [
        ethereum.Value.fromUnsignedBigInt(proposalId),
        ethereum.Value.fromAddress(voter)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as ReignDAO__getReceiptResultValue0Struct
    );
  }

  gracePeriodDuration(): BigInt {
    let result = super.call(
      "gracePeriodDuration",
      "gracePeriodDuration():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_gracePeriodDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "gracePeriodDuration",
      "gracePeriodDuration():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gradualWeightUpdate(): BigInt {
    let result = super.call(
      "gradualWeightUpdate",
      "gradualWeightUpdate():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_gradualWeightUpdate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "gradualWeightUpdate",
      "gradualWeightUpdate():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isActive(): boolean {
    let result = super.call("isActive", "isActive():(bool)", []);

    return result[0].toBoolean();
  }

  try_isActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isActive", "isActive():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lastProposalId(): BigInt {
    let result = super.call("lastProposalId", "lastProposalId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_lastProposalId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastProposalId",
      "lastProposalId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  latestProposalIds(param0: Address): BigInt {
    let result = super.call(
      "latestProposalIds",
      "latestProposalIds(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_latestProposalIds(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "latestProposalIds",
      "latestProposalIds(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minQuorum(): BigInt {
    let result = super.call("minQuorum", "minQuorum():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minQuorum(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minQuorum", "minQuorum():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposals(param0: BigInt): ReignDAO__proposalsResult {
    let result = super.call(
      "proposals",
      "proposals(uint256):(uint256,address,string,string,uint256,uint256,uint256,uint256,bool,bool,(uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new ReignDAO__proposalsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toString(),
      result[3].toString(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBoolean(),
      result[9].toBoolean(),
      result[10].toTuple() as ReignDAO__proposalsResultParametersStruct
    );
  }

  try_proposals(
    param0: BigInt
  ): ethereum.CallResult<ReignDAO__proposalsResult> {
    let result = super.tryCall(
      "proposals",
      "proposals(uint256):(uint256,address,string,string,uint256,uint256,uint256,uint256,bool,bool,(uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ReignDAO__proposalsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toString(),
        value[3].toString(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBoolean(),
        value[9].toBoolean(),
        value[10].toTuple() as ReignDAO__proposalsResultParametersStruct
      )
    );
  }

  propose(
    targets: Array<Address>,
    values: Array<BigInt>,
    signatures: Array<string>,
    calldatas: Array<Bytes>,
    description: string,
    title: string
  ): BigInt {
    let result = super.call(
      "propose",
      "propose(address[],uint256[],string[],bytes[],string,string):(uint256)",
      [
        ethereum.Value.fromAddressArray(targets),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromStringArray(signatures),
        ethereum.Value.fromBytesArray(calldatas),
        ethereum.Value.fromString(description),
        ethereum.Value.fromString(title)
      ]
    );

    return result[0].toBigInt();
  }

  try_propose(
    targets: Array<Address>,
    values: Array<BigInt>,
    signatures: Array<string>,
    calldatas: Array<Bytes>,
    description: string,
    title: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "propose",
      "propose(address[],uint256[],string[],bytes[],string,string):(uint256)",
      [
        ethereum.Value.fromAddressArray(targets),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromStringArray(signatures),
        ethereum.Value.fromBytesArray(calldatas),
        ethereum.Value.fromString(description),
        ethereum.Value.fromString(title)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  queueDuration(): BigInt {
    let result = super.call("queueDuration", "queueDuration():(uint256)", []);

    return result[0].toBigInt();
  }

  try_queueDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "queueDuration",
      "queueDuration():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  queuedTransactions(param0: Bytes): boolean {
    let result = super.call(
      "queuedTransactions",
      "queuedTransactions(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toBoolean();
  }

  try_queuedTransactions(param0: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "queuedTransactions",
      "queuedTransactions(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  smartPool(): Address {
    let result = super.call("smartPool", "smartPool():(address)", []);

    return result[0].toAddress();
  }

  try_smartPool(): ethereum.CallResult<Address> {
    let result = super.tryCall("smartPool", "smartPool():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  state(proposalId: BigInt): i32 {
    let result = super.call("state", "state(uint256):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(proposalId)
    ]);

    return result[0].toI32();
  }

  try_state(proposalId: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall("state", "state(uint256):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(proposalId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  warmUpDuration(): BigInt {
    let result = super.call("warmUpDuration", "warmUpDuration():(uint256)", []);

    return result[0].toBigInt();
  }

  try_warmUpDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "warmUpDuration",
      "warmUpDuration():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class AbrogateProposalCall extends ethereum.Call {
  get inputs(): AbrogateProposalCall__Inputs {
    return new AbrogateProposalCall__Inputs(this);
  }

  get outputs(): AbrogateProposalCall__Outputs {
    return new AbrogateProposalCall__Outputs(this);
  }
}

export class AbrogateProposalCall__Inputs {
  _call: AbrogateProposalCall;

  constructor(call: AbrogateProposalCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AbrogateProposalCall__Outputs {
  _call: AbrogateProposalCall;

  constructor(call: AbrogateProposalCall) {
    this._call = call;
  }
}

export class AbrogationProposal_cancelVoteCall extends ethereum.Call {
  get inputs(): AbrogationProposal_cancelVoteCall__Inputs {
    return new AbrogationProposal_cancelVoteCall__Inputs(this);
  }

  get outputs(): AbrogationProposal_cancelVoteCall__Outputs {
    return new AbrogationProposal_cancelVoteCall__Outputs(this);
  }
}

export class AbrogationProposal_cancelVoteCall__Inputs {
  _call: AbrogationProposal_cancelVoteCall;

  constructor(call: AbrogationProposal_cancelVoteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AbrogationProposal_cancelVoteCall__Outputs {
  _call: AbrogationProposal_cancelVoteCall;

  constructor(call: AbrogationProposal_cancelVoteCall) {
    this._call = call;
  }
}

export class AbrogationProposal_castVoteCall extends ethereum.Call {
  get inputs(): AbrogationProposal_castVoteCall__Inputs {
    return new AbrogationProposal_castVoteCall__Inputs(this);
  }

  get outputs(): AbrogationProposal_castVoteCall__Outputs {
    return new AbrogationProposal_castVoteCall__Outputs(this);
  }
}

export class AbrogationProposal_castVoteCall__Inputs {
  _call: AbrogationProposal_castVoteCall;

  constructor(call: AbrogationProposal_castVoteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get support(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class AbrogationProposal_castVoteCall__Outputs {
  _call: AbrogationProposal_castVoteCall;

  constructor(call: AbrogationProposal_castVoteCall) {
    this._call = call;
  }
}

export class ActivateCall extends ethereum.Call {
  get inputs(): ActivateCall__Inputs {
    return new ActivateCall__Inputs(this);
  }

  get outputs(): ActivateCall__Outputs {
    return new ActivateCall__Outputs(this);
  }
}

export class ActivateCall__Inputs {
  _call: ActivateCall;

  constructor(call: ActivateCall) {
    this._call = call;
  }
}

export class ActivateCall__Outputs {
  _call: ActivateCall;

  constructor(call: ActivateCall) {
    this._call = call;
  }
}

export class CancelProposalCall extends ethereum.Call {
  get inputs(): CancelProposalCall__Inputs {
    return new CancelProposalCall__Inputs(this);
  }

  get outputs(): CancelProposalCall__Outputs {
    return new CancelProposalCall__Outputs(this);
  }
}

export class CancelProposalCall__Inputs {
  _call: CancelProposalCall;

  constructor(call: CancelProposalCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelProposalCall__Outputs {
  _call: CancelProposalCall;

  constructor(call: CancelProposalCall) {
    this._call = call;
  }
}

export class CancelVoteCall extends ethereum.Call {
  get inputs(): CancelVoteCall__Inputs {
    return new CancelVoteCall__Inputs(this);
  }

  get outputs(): CancelVoteCall__Outputs {
    return new CancelVoteCall__Outputs(this);
  }
}

export class CancelVoteCall__Inputs {
  _call: CancelVoteCall;

  constructor(call: CancelVoteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelVoteCall__Outputs {
  _call: CancelVoteCall;

  constructor(call: CancelVoteCall) {
    this._call = call;
  }
}

export class CastVoteCall extends ethereum.Call {
  get inputs(): CastVoteCall__Inputs {
    return new CastVoteCall__Inputs(this);
  }

  get outputs(): CastVoteCall__Outputs {
    return new CastVoteCall__Outputs(this);
  }
}

export class CastVoteCall__Inputs {
  _call: CastVoteCall;

  constructor(call: CastVoteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get support(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class CastVoteCall__Outputs {
  _call: CastVoteCall;

  constructor(call: CastVoteCall) {
    this._call = call;
  }
}

export class ExecuteCall extends ethereum.Call {
  get inputs(): ExecuteCall__Inputs {
    return new ExecuteCall__Inputs(this);
  }

  get outputs(): ExecuteCall__Outputs {
    return new ExecuteCall__Outputs(this);
  }
}

export class ExecuteCall__Inputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExecuteCall__Outputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _reignAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _basketBalancer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _smartPool(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class ProposeCall extends ethereum.Call {
  get inputs(): ProposeCall__Inputs {
    return new ProposeCall__Inputs(this);
  }

  get outputs(): ProposeCall__Outputs {
    return new ProposeCall__Outputs(this);
  }
}

export class ProposeCall__Inputs {
  _call: ProposeCall;

  constructor(call: ProposeCall) {
    this._call = call;
  }

  get targets(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._call.inputValues[2].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }

  get description(): string {
    return this._call.inputValues[4].value.toString();
  }

  get title(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class ProposeCall__Outputs {
  _call: ProposeCall;

  constructor(call: ProposeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class QueueCall extends ethereum.Call {
  get inputs(): QueueCall__Inputs {
    return new QueueCall__Inputs(this);
  }

  get outputs(): QueueCall__Outputs {
    return new QueueCall__Outputs(this);
  }
}

export class QueueCall__Inputs {
  _call: QueueCall;

  constructor(call: QueueCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class QueueCall__Outputs {
  _call: QueueCall;

  constructor(call: QueueCall) {
    this._call = call;
  }
}

export class SetAcceptanceThresholdCall extends ethereum.Call {
  get inputs(): SetAcceptanceThresholdCall__Inputs {
    return new SetAcceptanceThresholdCall__Inputs(this);
  }

  get outputs(): SetAcceptanceThresholdCall__Outputs {
    return new SetAcceptanceThresholdCall__Outputs(this);
  }
}

export class SetAcceptanceThresholdCall__Inputs {
  _call: SetAcceptanceThresholdCall;

  constructor(call: SetAcceptanceThresholdCall) {
    this._call = call;
  }

  get threshold(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetAcceptanceThresholdCall__Outputs {
  _call: SetAcceptanceThresholdCall;

  constructor(call: SetAcceptanceThresholdCall) {
    this._call = call;
  }
}

export class SetActiveDurationCall extends ethereum.Call {
  get inputs(): SetActiveDurationCall__Inputs {
    return new SetActiveDurationCall__Inputs(this);
  }

  get outputs(): SetActiveDurationCall__Outputs {
    return new SetActiveDurationCall__Outputs(this);
  }
}

export class SetActiveDurationCall__Inputs {
  _call: SetActiveDurationCall;

  constructor(call: SetActiveDurationCall) {
    this._call = call;
  }

  get period(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetActiveDurationCall__Outputs {
  _call: SetActiveDurationCall;

  constructor(call: SetActiveDurationCall) {
    this._call = call;
  }
}

export class SetGracePeriodDurationCall extends ethereum.Call {
  get inputs(): SetGracePeriodDurationCall__Inputs {
    return new SetGracePeriodDurationCall__Inputs(this);
  }

  get outputs(): SetGracePeriodDurationCall__Outputs {
    return new SetGracePeriodDurationCall__Outputs(this);
  }
}

export class SetGracePeriodDurationCall__Inputs {
  _call: SetGracePeriodDurationCall;

  constructor(call: SetGracePeriodDurationCall) {
    this._call = call;
  }

  get period(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetGracePeriodDurationCall__Outputs {
  _call: SetGracePeriodDurationCall;

  constructor(call: SetGracePeriodDurationCall) {
    this._call = call;
  }
}

export class SetGradualWeightUpdateCall extends ethereum.Call {
  get inputs(): SetGradualWeightUpdateCall__Inputs {
    return new SetGradualWeightUpdateCall__Inputs(this);
  }

  get outputs(): SetGradualWeightUpdateCall__Outputs {
    return new SetGradualWeightUpdateCall__Outputs(this);
  }
}

export class SetGradualWeightUpdateCall__Inputs {
  _call: SetGradualWeightUpdateCall;

  constructor(call: SetGradualWeightUpdateCall) {
    this._call = call;
  }

  get period(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetGradualWeightUpdateCall__Outputs {
  _call: SetGradualWeightUpdateCall;

  constructor(call: SetGradualWeightUpdateCall) {
    this._call = call;
  }
}

export class SetMinQuorumCall extends ethereum.Call {
  get inputs(): SetMinQuorumCall__Inputs {
    return new SetMinQuorumCall__Inputs(this);
  }

  get outputs(): SetMinQuorumCall__Outputs {
    return new SetMinQuorumCall__Outputs(this);
  }
}

export class SetMinQuorumCall__Inputs {
  _call: SetMinQuorumCall;

  constructor(call: SetMinQuorumCall) {
    this._call = call;
  }

  get quorum(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinQuorumCall__Outputs {
  _call: SetMinQuorumCall;

  constructor(call: SetMinQuorumCall) {
    this._call = call;
  }
}

export class SetQueueDurationCall extends ethereum.Call {
  get inputs(): SetQueueDurationCall__Inputs {
    return new SetQueueDurationCall__Inputs(this);
  }

  get outputs(): SetQueueDurationCall__Outputs {
    return new SetQueueDurationCall__Outputs(this);
  }
}

export class SetQueueDurationCall__Inputs {
  _call: SetQueueDurationCall;

  constructor(call: SetQueueDurationCall) {
    this._call = call;
  }

  get period(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetQueueDurationCall__Outputs {
  _call: SetQueueDurationCall;

  constructor(call: SetQueueDurationCall) {
    this._call = call;
  }
}

export class SetSmartPoolAddressCall extends ethereum.Call {
  get inputs(): SetSmartPoolAddressCall__Inputs {
    return new SetSmartPoolAddressCall__Inputs(this);
  }

  get outputs(): SetSmartPoolAddressCall__Outputs {
    return new SetSmartPoolAddressCall__Outputs(this);
  }
}

export class SetSmartPoolAddressCall__Inputs {
  _call: SetSmartPoolAddressCall;

  constructor(call: SetSmartPoolAddressCall) {
    this._call = call;
  }

  get _smartPool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSmartPoolAddressCall__Outputs {
  _call: SetSmartPoolAddressCall;

  constructor(call: SetSmartPoolAddressCall) {
    this._call = call;
  }
}

export class SetSmartPoolInitialCall extends ethereum.Call {
  get inputs(): SetSmartPoolInitialCall__Inputs {
    return new SetSmartPoolInitialCall__Inputs(this);
  }

  get outputs(): SetSmartPoolInitialCall__Outputs {
    return new SetSmartPoolInitialCall__Outputs(this);
  }
}

export class SetSmartPoolInitialCall__Inputs {
  _call: SetSmartPoolInitialCall;

  constructor(call: SetSmartPoolInitialCall) {
    this._call = call;
  }

  get _smartPool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSmartPoolInitialCall__Outputs {
  _call: SetSmartPoolInitialCall;

  constructor(call: SetSmartPoolInitialCall) {
    this._call = call;
  }
}

export class SetWarmUpDurationCall extends ethereum.Call {
  get inputs(): SetWarmUpDurationCall__Inputs {
    return new SetWarmUpDurationCall__Inputs(this);
  }

  get outputs(): SetWarmUpDurationCall__Outputs {
    return new SetWarmUpDurationCall__Outputs(this);
  }
}

export class SetWarmUpDurationCall__Inputs {
  _call: SetWarmUpDurationCall;

  constructor(call: SetWarmUpDurationCall) {
    this._call = call;
  }

  get period(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetWarmUpDurationCall__Outputs {
  _call: SetWarmUpDurationCall;

  constructor(call: SetWarmUpDurationCall) {
    this._call = call;
  }
}

export class StartAbrogationProposalCall extends ethereum.Call {
  get inputs(): StartAbrogationProposalCall__Inputs {
    return new StartAbrogationProposalCall__Inputs(this);
  }

  get outputs(): StartAbrogationProposalCall__Outputs {
    return new StartAbrogationProposalCall__Outputs(this);
  }
}

export class StartAbrogationProposalCall__Inputs {
  _call: StartAbrogationProposalCall;

  constructor(call: StartAbrogationProposalCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get description(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class StartAbrogationProposalCall__Outputs {
  _call: StartAbrogationProposalCall;

  constructor(call: StartAbrogationProposalCall) {
    this._call = call;
  }
}

export class TriggerApplyAddTokenCall extends ethereum.Call {
  get inputs(): TriggerApplyAddTokenCall__Inputs {
    return new TriggerApplyAddTokenCall__Inputs(this);
  }

  get outputs(): TriggerApplyAddTokenCall__Outputs {
    return new TriggerApplyAddTokenCall__Outputs(this);
  }
}

export class TriggerApplyAddTokenCall__Inputs {
  _call: TriggerApplyAddTokenCall;

  constructor(call: TriggerApplyAddTokenCall) {
    this._call = call;
  }
}

export class TriggerApplyAddTokenCall__Outputs {
  _call: TriggerApplyAddTokenCall;

  constructor(call: TriggerApplyAddTokenCall) {
    this._call = call;
  }
}

export class TriggerWeightUpdateCall extends ethereum.Call {
  get inputs(): TriggerWeightUpdateCall__Inputs {
    return new TriggerWeightUpdateCall__Inputs(this);
  }

  get outputs(): TriggerWeightUpdateCall__Outputs {
    return new TriggerWeightUpdateCall__Outputs(this);
  }
}

export class TriggerWeightUpdateCall__Inputs {
  _call: TriggerWeightUpdateCall;

  constructor(call: TriggerWeightUpdateCall) {
    this._call = call;
  }
}

export class TriggerWeightUpdateCall__Outputs {
  _call: TriggerWeightUpdateCall;

  constructor(call: TriggerWeightUpdateCall) {
    this._call = call;
  }
}
